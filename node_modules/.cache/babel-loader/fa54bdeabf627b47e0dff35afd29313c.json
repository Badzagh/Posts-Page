{"ast":null,"code":"var _jsxFileName = \"/home/ilia/Documents/Saba/my-app/src/DataFetching.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useReducer, useState } from \"react\";\nimport PostList from \"./PostList\";\n/*function reducer (state, action){\n    return { \n        ...state,\n        posts: action.payload\n    }\n}*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DataFetching() {\n  _s();\n\n  //const [state, dispatch] = useReducer(reducer, { posts: []})\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      async function getResponse() {\n        let response = await fetch('https://jsonplaceholder.typicode.com/posts', {\n          signal: abortCont.signal\n        });\n        let content = await response.json();\n        content = content.splice(98, content.length); //dispatch({ payload: content})\n\n        setPosts(content);\n        console.log(content, \"its posts\");\n      }\n\n      ;\n      getResponse();\n    }, 100);\n    return () => abortCont.abort();\n  }, []);\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      title: state.title,\n      body: state.body\n    })\n  };\n  fetch('https://jsonplaceholder.typicode.com/posts', requestOptions).then(response => {\n    response.json();\n    console.log(response, \"request sucsess\");\n  }).then(data => {\n    //dispatch({ payload: content.push(data)})\n    setPosts(posts => [...posts, data]);\n    console.log(\"post added\");\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PostList, {\n      posts: state.posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(DataFetching, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = DataFetching;\nexport default DataFetching;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataFetching\");","map":{"version":3,"sources":["/home/ilia/Documents/Saba/my-app/src/DataFetching.js"],"names":["useEffect","useReducer","useState","PostList","DataFetching","posts","setPosts","abortCont","AbortController","setTimeout","getResponse","response","fetch","signal","content","json","splice","length","console","log","abort","requestOptions","method","headers","body","JSON","stringify","title","state","then","data"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,QAAP,MAAqB,YAArB;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;AAIA,SAASC,YAAT,GAAwB;AAAA;;AACpB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,SAAS,GAAG,IAAIC,eAAJ,EAAlB;AAEAC,IAAAA,UAAU,CAAC,MAAM;AACb,qBAAeC,WAAf,GAA6B;AACzB,YAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,EAA+C;AAAEC,UAAAA,MAAM,EAAEN,SAAS,CAACM;AAApB,SAA/C,CAA1B;AACA,YAAIC,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAApB;AACAD,QAAAA,OAAO,GAAGA,OAAO,CAACE,MAAR,CAAe,EAAf,EAAmBF,OAAO,CAACG,MAA3B,CAAV,CAHyB,CAIzB;;AACAX,QAAAA,QAAQ,CAACQ,OAAD,CAAR;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ,EAAqB,WAArB;AACH;;AAAA;AAEDJ,MAAAA,WAAW;AACd,KAXS,EAWP,GAXO,CAAV;AAaA,WAAO,MAAMH,SAAS,CAACa,KAAV,EAAb;AACH,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,QAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFU;AAGnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,MAAAA,KAAK,EAAEC,KAAK,CAACD,KADI;AAEjBH,MAAAA,IAAI,EAAGI,KAAK,CAACJ;AAFI,KAAf;AAHa,GAAvB;AAQAZ,EAAAA,KAAK,CAAC,4CAAD,EAA+CS,cAA/C,CAAL,CACKQ,IADL,CACUlB,QAAQ,IAAI;AAChBA,IAAAA,QAAQ,CAACI,IAAT;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ,EAAsB,iBAAtB;AACD,GAJL,EAKKkB,IALL,CAKWC,IAAD,IAAU;AACZ;AACAxB,IAAAA,QAAQ,CAAED,KAAD,IAAW,CAAC,GAAGA,KAAJ,EAAUyB,IAAV,CAAZ,CAAR;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,GATL;AAYA,sBACI;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAGS,KAAK,CAACvB;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH;;GAjDQD,Y;;KAAAA,Y;AAmDT,eAAeA,YAAf","sourcesContent":["import { useEffect, useReducer, useState } from \"react\";\nimport PostList from \"./PostList\";\n\n\n/*function reducer (state, action){\n    return { \n        ...state,\n        posts: action.payload\n    }\n}*/\n\n\n\nfunction DataFetching() {\n    //const [state, dispatch] = useReducer(reducer, { posts: []})\n\n    const [posts, setPosts] = useState([])\n\n    useEffect(() => {\n        const abortCont = new AbortController();\n\n        setTimeout(() => {\n            async function getResponse() {\n                let response = await fetch('https://jsonplaceholder.typicode.com/posts', { signal: abortCont.signal })\n                let content = await response.json();\n                content = content.splice(98, content.length)\n                //dispatch({ payload: content})\n                setPosts(content)\n                console.log(content, \"its posts\")\n            };\n            \n            getResponse();\n        }, 100);\n            \n        return () => abortCont.abort();\n    }, [])\n\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            title: state.title,\n            body : state.body\n            })\n    };\n    fetch('https://jsonplaceholder.typicode.com/posts', requestOptions)\n        .then(response => {\n          response.json()\n          console.log(response, \"request sucsess\")\n        })\n        .then((data) => {\n            //dispatch({ payload: content.push(data)})\n            setPosts((posts) => [...posts,data]);\n            console.log(\"post added\")\n        })\n\n\n    return (\n        <>\n            <PostList posts ={state.posts}/>\n        </>\n    )\n}\n\nexport default DataFetching;"]},"metadata":{},"sourceType":"module"}