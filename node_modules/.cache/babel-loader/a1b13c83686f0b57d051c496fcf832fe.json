{"ast":null,"code":"var _jsxFileName = \"/home/ilia/Documents/Saba/newProjectApi/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'; //import reportWebVitals from './reportWebVitals';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this), document.getElementById('root')); //api fetch\n\n/*fetch('https://jsonplaceholder.typicode.com/posts')\n      .then(response => {\n        if(response.ok){\n          return response.json()\n        } else {\n          throw Error\n        }\n      })\n      .then(json => \n        document.getElementById('root').innerHTML =\n        JSON.stringify(json)\n        ).catch(error => {\n          console.log(error)\n        })*/\n//asinc/await1\n\n/*async function getResponse() {\n  let response = await fetch('https://jsonplaceholder.typicode.com/posts')\n  let content = await response.json()\n  content = content.splice(0, 4)\n   let list = document.querySelector('.posts')\n   let key;\n   for (key in content) {\n    \n      list.innerHTML += `\n      <li>\n        <h4>${content[key].title}</h4>\n        <p>${content[key].body}</p>\n      </li>\n    `\n  }\n};\n getResponse();*/\n//async/await2\n\n/*async function getResponse() {\n   let response = await fetch('https://jsonplaceholder.typicode.com/posts')\n   if(!response.ok){\n    throw new Error(`შეცდომა მისამართზე ${'https://jsonplaceholder.typicode.com/posts'}, სტატუსი შეცდომა ${response}`);\n  } \n   return await response.json();\n}\ngetResponse().then((data) => console.log(data))*/\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals","map":{"version":3,"sources":["/home/ilia/Documents/Saba/newProjectApi/my-app/src/index.js"],"names":["React","ReactDOM","App","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CACA;;;AAEAD,QAAQ,CAACE,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAME;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//api fetch\n/*fetch('https://jsonplaceholder.typicode.com/posts')\n      .then(response => {\n        if(response.ok){\n          return response.json()\n        } else {\n          throw Error\n        }\n      })\n      .then(json => \n        document.getElementById('root').innerHTML =\n        JSON.stringify(json)\n        ).catch(error => {\n          console.log(error)\n        })*/\n\n  //asinc/await1\n  /*async function getResponse() {\n    let response = await fetch('https://jsonplaceholder.typicode.com/posts')\n    let content = await response.json()\n    content = content.splice(0, 4)\n\n    let list = document.querySelector('.posts')\n\n    let key;\n\n    for (key in content) {\n      \n        list.innerHTML += `\n        <li>\n          <h4>${content[key].title}</h4>\n          <p>${content[key].body}</p>\n        </li>\n      `\n    }\n  };\n\n  getResponse();*/\n\n  //async/await2\n  /*async function getResponse() {\n\n    let response = await fetch('https://jsonplaceholder.typicode.com/posts')\n\n    if(!response.ok){\n      throw new Error(`შეცდომა მისამართზე ${'https://jsonplaceholder.typicode.com/posts'}, სტატუსი შეცდომა ${response}`);\n    } \n\n    return await response.json();\n  }\n  getResponse().then((data) => console.log(data))*/\n  \n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"]},"metadata":{},"sourceType":"module"}