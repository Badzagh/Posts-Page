{"ast":null,"code":"var _jsxFileName = \"/home/ilia/Documents/Saba/newProjectApi/my-app/src/NewPost.js\";\nimport './App.css';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewPost(handleSubmit) {\n  //const newPosts = props.newPosts\n\n  /*const [newPosts, setNewPosts] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n   const handleInputTitleChange = (e) => {\n    setTitle(e.target.value)\n  }\n   const handleInputTextChange = (e) => {\n      setBody(e.target.value)\n  }\n   const handleSubmit = (e) => {\n      e.preventDefault();\n       const Blog = {title, text}\n      console.log(Blog)\n    \n      // POST request using fetch inside useEffect React hook\n      const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n              title: title,\n              body : body\n              })\n      };\n      fetch('https://jsonplaceholder.typicode.com/posts', requestOptions)\n          .then(response => response.json())\n          //.then(data => setPostId(data.id))\n          .then(post => newPosts.push(post))\n          .then(() => {\n              console.log(posts, \"post added\")\n          })\n  }*/\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Blog title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => handleInputTitleChange(e),\n        id: \"title-value\",\n        type: \"text\",\n        value: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Blog text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: e => handleInputTextChange(e),\n        type: \"text\",\n        id: \"text-value\",\n        value: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: [\"Add Blog\", postId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_c = NewPost;\nexport default NewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"sources":["/home/ilia/Documents/Saba/newProjectApi/my-app/src/NewPost.js"],"names":["useState","useEffect","NewPost","handleSubmit","e","handleInputTitleChange","title","handleInputTextChange","body","postId"],"mappings":";AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,OAAT,CAAkBC,YAAlB,EAAgC;AAC9B;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAME,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEA,YAAhB;AAAA,8BACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADd,eAEc;AAAO,QAAA,QAAQ,EAAEC,CAAC,IAAIC,sBAAsB,CAACD,CAAD,CAA5C;AAAiD,QAAA,EAAE,EAAC,aAApD;AAAkE,QAAA,IAAI,EAAC,MAAvE;AAA8E,QAAA,KAAK,EAAEE;AAArF;AAAA;AAAA;AAAA;AAAA,cAFd,eAGc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHd,eAIc;AAAU,QAAA,QAAQ,EAAEF,CAAC,IAAIG,qBAAqB,CAACH,CAAD,CAA9C;AAAmD,QAAA,IAAI,EAAC,MAAxD;AAA+D,QAAA,EAAE,EAAC,YAAlE;AAA+E,QAAA,KAAK,EAAEI;AAAtF;AAAA;AAAA;AAAA;AAAA,cAJd,eAKc;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,+BAA+BC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cALd;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;KApDQP,O;AAsDT,eAAeA,OAAf","sourcesContent":["import './App.css';\nimport { useState, useEffect } from \"react\";\n\nfunction NewPost( handleSubmit) {\n  //const newPosts = props.newPosts\n\n  /*const [newPosts, setNewPosts] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  const handleInputTitleChange = (e) => {\n    setTitle(e.target.value)\n}\n\n  const handleInputTextChange = (e) => {\n      setBody(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n      e.preventDefault();\n\n      const Blog = {title, text}\n      console.log(Blog)\n    \n      // POST request using fetch inside useEffect React hook\n      const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n              title: title,\n              body : body\n              })\n      };\n      fetch('https://jsonplaceholder.typicode.com/posts', requestOptions)\n          .then(response => response.json())\n          //.then(data => setPostId(data.id))\n          .then(post => newPosts.push(post))\n          .then(() => {\n              console.log(posts, \"post added\")\n          })\n  }*/\n\n  return (\n    <div>\n      <h1></h1>\n      <form onSubmit={handleSubmit}>\n                    <label>Blog title:</label>\n                    <input onChange={e => handleInputTitleChange(e)} id=\"title-value\" type=\"text\" value={title}></input>\n                    <label>Blog text:</label>\n                    <textarea onChange={e => handleInputTextChange(e)} type=\"text\" id=\"text-value\" value={body}></textarea>\n                    <button type=\"submit\">Add Blog{postId}</button>\n                </form>\n    </div>\n  )\n  \n}\n\nexport default NewPost;"]},"metadata":{},"sourceType":"module"}