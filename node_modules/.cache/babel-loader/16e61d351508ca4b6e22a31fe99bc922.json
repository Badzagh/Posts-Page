{"ast":null,"code":"var _jsxFileName = \"/home/ilia/Documents/Saba/my-app/src/NewPost.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'title':\n      return { ...state,\n        title: action.payload\n      };\n\n    case 'body':\n      return { ...state,\n        body: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction NewPost() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    title: \"\",\n    body: \"\"\n  });\n\n  const handleInputTitleChange = e => {\n    dispatch({\n      type: \"title\",\n      payload: e.target.value\n    });\n  };\n\n  const handleInputTextChange = e => {\n    dispatch({\n      type: \"body\",\n      payload: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    /*const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            title: state.title,\n            body : state.body\n            })\n    };\n    fetch('https://jsonplaceholder.typicode.com/posts', requestOptions)\n        .then(response => {\n          response.json()\n          console.log(response, \"post added\")\n        })\n        .then(() => {\n            console.log(\"post added\")\n        })*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Blog title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => handleInputTitleChange(e),\n        id: \"title-value\",\n        type: \"text\",\n        value: state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Blog text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: e => handleInputTextChange(e),\n        type: \"text\",\n        id: \"text-value\",\n        value: state.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewPost, \"v5YovvVNkU0h1bQgtthSrHL184c=\");\n\n_c = NewPost;\nexport default NewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"sources":["/home/ilia/Documents/Saba/my-app/src/NewPost.js"],"names":["useReducer","reducer","state","action","type","title","payload","body","NewPost","dispatch","handleInputTitleChange","e","target","value","handleInputTextChange","handleSubmit","preventDefault"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;;;AAGA,SAASC,OAAT,CAAkBC,KAAlB,EAAyBC,MAAzB,EAAgC;AAC9B,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,OAAL;AACE,aAAO,EACH,GAAGF,KADA;AAEHG,QAAAA,KAAK,EAAEF,MAAM,CAACG;AAFX,OAAP;;AAIF,SAAK,MAAL;AACE,aAAO,EACH,GAAGJ,KADA;AAEHK,QAAAA,IAAI,EAAEJ,MAAM,CAACG;AAFV,OAAP;;AAIF;AACE,aAAOJ,KAAP;AAZJ;AAcD;;AAGD,SAASM,OAAT,GAAmB;AAAA;;AAEjB,QAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBT,UAAU,CAACC,OAAD,EAAU;AAAEI,IAAAA,KAAK,EAAE,EAAT;AAAaE,IAAAA,IAAI,EAAE;AAAnB,GAAV,CAApC;;AAEA,QAAMG,sBAAsB,GAAIC,CAAD,IAAO;AACpCF,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAE,OAAR;AAAiBE,MAAAA,OAAO,EAAEK,CAAC,CAACC,MAAF,CAASC;AAAnC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,qBAAqB,GAAIH,CAAD,IAAO;AACnCF,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAE,MAAR;AAAgBE,MAAAA,OAAO,EAAEK,CAAC,CAACC,MAAF,CAASC;AAAlC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAME,YAAY,GAAIJ,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACK,cAAF;AAGA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG,GApBD;;AAuBA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAED,YAAhB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,QAAQ,EAAEJ,CAAC,IAAID,sBAAsB,CAACC,CAAD,CAA5C;AAAiD,QAAA,EAAE,EAAC,aAApD;AAAkE,QAAA,IAAI,EAAC,MAAvE;AAA8E,QAAA,KAAK,EAAET,KAAK,CAACG;AAA3F;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAU,QAAA,QAAQ,EAAEM,CAAC,IAAIG,qBAAqB,CAACH,CAAD,CAA9C;AAAmD,QAAA,IAAI,EAAC,MAAxD;AAA+D,QAAA,EAAE,EAAC,YAAlE;AAA+E,QAAA,KAAK,EAAET,KAAK,CAACK;AAA5F;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAhDQC,O;;KAAAA,O;AAkDT,eAAeA,OAAf","sourcesContent":["import { useReducer } from \"react\";\n\n\nfunction reducer (state, action){\n  switch(action.type){\n    case 'title':  \n      return { \n          ...state,\n          title: action.payload\n      }\n    case 'body':  \n      return { \n          ...state,\n          body: action.payload\n      }\n    default:\n      return state\n  }\n}\n\n\nfunction NewPost() {\n\n  const [state, dispatch] = useReducer(reducer, { title: \"\", body: \"\"})\n\n  const handleInputTitleChange = (e) => {\n    dispatch({ type: \"title\", payload: e.target.value})\n  }\n\n  const handleInputTextChange = (e) => {\n    dispatch({ type: \"body\", payload: e.target.value})\n  }\n\n  const handleSubmit = (e) => {\n      e.preventDefault();\n\n      \n      /*const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n              title: state.title,\n              body : state.body\n              })\n      };\n      fetch('https://jsonplaceholder.typicode.com/posts', requestOptions)\n          .then(response => {\n            response.json()\n            console.log(response, \"post added\")\n          })\n          .then(() => {\n              console.log(\"post added\")\n          })*/\n  }\n\n\n  return (\n    <div className=\"form-container\">\n      <h1>Create Post</h1>\n      <form onSubmit={handleSubmit}>\n        <label>Blog title:</label>\n        <input onChange={e => handleInputTitleChange(e)} id=\"title-value\" type=\"text\" value={state.title}></input>\n        <label>Blog text:</label>\n        <textarea onChange={e => handleInputTextChange(e)} type=\"text\" id=\"text-value\" value={state.body}></textarea>\n        <button type=\"submit\">Add Blog</button>\n      </form>\n    </div>\n  )\n  \n}\n\nexport default NewPost;"]},"metadata":{},"sourceType":"module"}