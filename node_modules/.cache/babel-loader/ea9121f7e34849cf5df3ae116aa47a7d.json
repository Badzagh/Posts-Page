{"ast":null,"code":"var _jsxFileName = \"/home/ilia/Documents/Saba/my-app/src/DataFetching.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useReducer, useState } from \"react\";\nimport PostList from \"./PostList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction reducer(state, action) {\n  return { ...state,\n    posts: action.payload\n  };\n}\n\nfunction DataFetching() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    posts: []\n  }); //const [length, setLength] = useState(\"100\");\n\n  useEffect(() => {\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      async function getResponse() {\n        await fetch('https://jsonplaceholder.typicode.com/posts', {\n          signal: abortCont.signal\n        }).then(response => response.json()); //content = content.splice(98, content.length)\n\n        dispatch({\n          payload: content\n        });\n        console.log(content, \"its posts\");\n      }\n\n      ;\n      getResponse();\n    }, 100);\n    return () => abortCont.abort();\n  }, []);\n  /*const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n          userId: 10,\n          title: state.title,\n          body : state.body\n          })\n  };\n  fetch('https://jsonplaceholder.typicode.com/posts', requestOptions)\n      .then(response => {\n        response.json()\n        console.log(response, \"request sucsess\")\n      })\n      .then((data) => {\n          //dispatch({ payload: })\n          //setPosts((posts) => [...posts,data]);\n          setLength(\"101\")\n          console.log(state.posts,\"post added\")\n      })*/\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PostList, {\n      posts: state.posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(DataFetching, \"8EeBTHGkUHKzbJ8SPNGX5hiidQk=\");\n\n_c = DataFetching;\nexport default DataFetching;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataFetching\");","map":{"version":3,"sources":["/home/ilia/Documents/Saba/my-app/src/DataFetching.js"],"names":["useEffect","useReducer","useState","PostList","reducer","state","action","posts","payload","DataFetching","dispatch","abortCont","AbortController","setTimeout","getResponse","fetch","signal","then","response","json","content","console","log","abort"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAGA,SAASC,OAAT,CAAkBC,KAAlB,EAAyBC,MAAzB,EAAgC;AAC5B,SAAO,EACH,GAAGD,KADA;AAEHE,IAAAA,KAAK,EAAED,MAAM,CAACE;AAFX,GAAP;AAIH;;AAID,SAASC,YAAT,GAAwB;AAAA;;AACpB,QAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBT,UAAU,CAACG,OAAD,EAAU;AAAEG,IAAAA,KAAK,EAAE;AAAT,GAAV,CAApC,CADoB,CAEpB;;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,SAAS,GAAG,IAAIC,eAAJ,EAAlB;AAEAC,IAAAA,UAAU,CAAC,MAAM;AACb,qBAAeC,WAAf,GAA6B;AACzB,cAAMC,KAAK,CAAC,4CAAD,EAA+C;AAAEC,UAAAA,MAAM,EAAEL,SAAS,CAACK;AAApB,SAA/C,CAAL,CACLC,IADK,CACCC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADd,CAAN,CADyB,CAGzB;;AACAT,QAAAA,QAAQ,CAAC;AAAEF,UAAAA,OAAO,EAAEY;AAAX,SAAD,CAAR;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAAqB,WAArB;AACH;;AAAA;AAEDN,MAAAA,WAAW;AACd,KAVS,EAUP,GAVO,CAAV;AAYA,WAAO,MAAMH,SAAS,CAACY,KAAV,EAAb;AACH,GAhBQ,EAgBN,EAhBM,CAAT;AAmBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGI,sBACI;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAGlB,KAAK,CAACE;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH;;GAlDQE,Y;;KAAAA,Y;AAoDT,eAAeA,YAAf","sourcesContent":["import { useEffect, useReducer, useState } from \"react\";\nimport PostList from \"./PostList\";\n\n\nfunction reducer (state, action){\n    return { \n        ...state,\n        posts: action.payload\n    }\n}\n\n\n\nfunction DataFetching() {\n    const [state, dispatch] = useReducer(reducer, { posts: []});\n    //const [length, setLength] = useState(\"100\");\n\n    useEffect(() => {\n        const abortCont = new AbortController();\n\n        setTimeout(() => {\n            async function getResponse() {\n                await fetch('https://jsonplaceholder.typicode.com/posts', { signal: abortCont.signal })\n                .then((response) => response.json());\n                //content = content.splice(98, content.length)\n                dispatch({ payload: content})\n                console.log(content, \"its posts\")\n            };\n            \n            getResponse();\n        }, 100);\n            \n        return () => abortCont.abort();\n    }, [])\n    \n    \n    /*const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            userId: 10,\n            title: state.title,\n            body : state.body\n            })\n    };\n    fetch('https://jsonplaceholder.typicode.com/posts', requestOptions)\n        .then(response => {\n          response.json()\n          console.log(response, \"request sucsess\")\n        })\n        .then((data) => {\n            //dispatch({ payload: })\n            //setPosts((posts) => [...posts,data]);\n            setLength(\"101\")\n            console.log(state.posts,\"post added\")\n        })*/\n\n\n    return (\n        <>\n            <PostList posts ={state.posts}/>\n        </>\n    )\n}\n\nexport default DataFetching;"]},"metadata":{},"sourceType":"module"}